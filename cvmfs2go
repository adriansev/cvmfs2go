#!/usr/bin/env bash

CVMFS2GO_BASE_DIR="${HOME}/.cvmfs"
CACHE="${CVMFS2GO_BASE_DIR}/cvmfs-cache"
CONFIG_DIR="${CVMFS2GO_BASE_DIR}/configs"
DEFAULT_CONFDIR="${CONFIG_DIR}/default"
DEFAULT_CONF="${DEFAULT_CONFDIR}/default.local"
MOUNT_DIR="${CVMFS2GO_BASE_DIR}/mount"
IMAGE_DIR="${CVMFS2GO_BASE_DIR}/images"
mkdir -p ${CACHE} ${CONFIG_DIR} ${IMAGE_DIR} ${DEFAULT_CONFDIR} ${MOUNT_DIR}

help () {
echo "Generic HEP oriented container (it includes HEP_OSlibs dependency list)
This script+container _require_ specification of CVMFS_REPOSITORIES env variable (comma separated list of repositories)
Singularity instance be be steered by env variable SINGULARITY_CVMFS2GO that should
contain the exact arguments string as would have been used in cli or by usage of any Singularity steering env variables
detailed at https://sylabs.io/guides/3.5/user-guide/appendix.html
The Singularity image path can be set arbitrary by the value of CVMFS2GO_IMGPATH
The container can be pre-setup by the usage of files prefixed with CVMFS2GO_EXEC_ or CVMFS2GO_LOAD_
in the current directory on home directory. (the ones from current directory take precedence)
If given as 1st argument a name that start with CVMFS2GO_LOAD_ it will be sourced before running a command or starting the shell
If given as 1st argument a name that start with CVMFS2GO_EXEC_ the first line of file will be executed
Command format: cvmfs2go command
If no command is used a bash shell will be started
N.B.!!! a cache directory was created on host for keeping the cvmfs cache! -> ${CACHE}
IT WILL _NOT_ BE CLEAN UP AUTOMATICALLY!!!
run : cvmfs2go cleanup
CVMFS_ALIEN_CACHE documentation specify that cache can be deleted even when in use
https://cvmfs.readthedocs.io/en/stable/cpt-configure.html#alien-cache"
}

[[ "${1}" == "help" ]] && { help; exit; }
[[ "${1}" == "cleanup" ]] && { rm -rf ${CACHE}/* ${IMAGE_DIR}/* ; exit; }

# check and use external defined SINGULARITY_BINDPATH and SINGULARITY_SCRATCHDIR
[[ -n "${SINGULARITY_BINDPATH}" ]] && export SINGULARITY_BINDPATH="${CACHE}:/var/lib/cvmfs,${SINGULARITY_BINDPATH}" || export SINGULARITY_BINDPATH="${CACHE}:/var/lib/cvmfs"
[[ -z "${SINGULARITY_SCRATCHDIR}" ]] && export SINGULARITY_SCRATCHDIR="/var/run/cvmfs"

[[ -z "${CVMFS_REPOSITORIES}" ]] && { echo "no CVMFS_REPOSITORIES defined!!!"; help; exit 1; }
# Process repository list for --fusemount usage
declare -a FUSEMOUNT_ARGS
IFS=',' read -ra repo_list <<< "${CVMFS_REPOSITORIES}"
for i in "${repo_list[@]}" ; do
    FUSEMOUNT_ARGS+=(--fusemount "\"container:cvmfs2 ${i} /cvmfs/${i}\"")
done

# Process additional singularity command line settings that can be setup by environment
declare -a SINGULARITY_CVMFS2GO_ARGS
[[ -n "${SINGULARITY_CVMFS2GO}" ]] && read -ra SINGULARITY_CVMFS2GO_ARGS <<< "${SINGULARITY_CVMFS2GO}"

# Specify the location of Singularity image
if [[ -z "${CVMFS2GO_IMGPATH}" ]]; then
    NAME="${IMAGE_DIR}/el7cvmfs_native.sif"
    # singularity pull --name ${NAME} shub://adriansev/el7cvmfs.sing:latest &> /dev/null
    singularity pull --name ${NAME} http://asevcenc.web.cern.ch/asevcenc/singularity/el7cvmfs &> /dev/null
    export CVMFS2GO_IMGPATH="${NAME}"
fi

exec singularity -s run "${FUSEMOUNT_ARGS[@]}" "${SINGULARITY_CVMFS2GO_ARGS[@]}" ${CVMFS2GO_IMGPATH} "${@}"


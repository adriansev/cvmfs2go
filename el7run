#!/usr/bin/env bash

hash cvmfs2 2>/dev/null || { echo >&2 "This helper script assume presence of cvmfs package on the host."; exit 1; }

EL7RUN_BASE_DIR="${HOME}/.cvmfs"
CACHE="${EL7RUN_BASE_DIR}/cvmfs-cache"
CONFIG_DIR="${EL7RUN_BASE_DIR}/configs"
DEFAULT_CONFDIR="${CONFIG_DIR}/default"
DEFAULT_CONF="${DEFAULT_CONFDIR}/default.local"
MOUNT_DIR="${EL7RUN_BASE_DIR}/mount"
IMAGE_DIR="${EL7RUN_BASE_DIR}/images"
mkdir -p ${CACHE} ${CONFIG_DIR} ${IMAGE_DIR} ${DEFAULT_CONFDIR} ${MOUNT_DIR}

help () {
echo "Run CVMFS based software in Centos7 HEP oriented container (it includes HEP_OSlibs dependency list)
This script will automatically mount the host configured CVMFS repositories and if CVMFS_REPOSITORIES env variable is defined
will attempt to private-mount those repose
Singularity instance be be steered by env variable SINGULARITY_EL7RUN that should
contain the exact arguments string as would have been used in cli or by usage of any Singularity steering env variables
detailed at https://sylabs.io/guides/3.5/user-guide/appendix.html
Command format: ${0} command
If no command is used a bash shell will be started
N.B.!!! a cache directory was created on host for keeping the cvmfs cache! -> ${CACHE}
IT WILL _NOT_ BE CLEAN UP AUTOMATICALLY!!!
run : cvmfs2go cleanup
CVMFS_ALIEN_CACHE documentation specify that cache can be deleted even when in use
https://cvmfs.readthedocs.io/en/stable/cpt-configure.html#alien-cache"
}

get_default_conf () {
    tmpdir="${EL7RUN_BASE_DIR}/tmpgit"
    mkdir -p ${tmpdir}
    git clone https://github.com/adriansev/cvmfs2go.git ${tmpdir}
    cp -r ${tmpdir}/etc_cvmfs/* ${DEFAULT_CONFDIR}/
    cp ${tmpdir}/default.local ${DEFAULT_CONFDIR}/
    sed -i "/^CVMFS_ALIEN_CACHE/c\CVMFS_ALIEN_CACHE=\"${CACHE}\"" ${DEFAULT_CONFDIR}/default.local
    rm -rf ${tmpdir}
}

ARG_LIST=()
while [[ $# -gt 0 ]]; do
    key="${1}"
    case ${key} in
        -h|-help|help)
        help;
        exit;
        ;;
        -clean|-cleanup|cleanup)
        rm -rf ${CACHE}/*;
        exit;
        ;;
        -getdefaultconf)
        get_default_conf
        exit;
        ;;
        -default)
        CONF="${DEFAULT_CONF}"
        shift
        ;;
        -c|-conf)
        CONF="${2}"
        shift # past argument
        shift # past value
        ;;
        *)    # unknown option
        ARG_LIST+=("${1}") # save it in an array for later
        shift # past argument
        ;;
    esac
done
set -- "${ARG_LIST[@]}" # restore positional parameters

if [[ ! -e "${CONF}" ]]; then
    if [[ -e /etc/cvmfs/default.local ]];then
        CONF="/etc/cvmfs/default.local"
        source ${CONF}
        ETC_REPOS="${CVMFS_REPOSITORIES}"
        unset CVMFS_REPOSITORIES
    fi
fi

# let's read both env and the config file to create a list of repositories
[[ -n "${CVMFS_REPOSITORIES}" ]] && { ENV_REPOS="${CVMFS_REPOSITORIES}"; unset CVMFS_REPOSITORIES; } # save the environment list
source ${CONF}
[[ -n "${CVMFS_REPOSITORIES}" ]] && CVMFS_REPOSITORIES="${CVMFS_REPOSITORIES},${ENV_REPOS}" || CVMFS_REPOSITORIES="${ENV_REPOS}" # merge toghether the repositories list
[[ -z "${CVMFS_REPOSITORIES}" ]] && { echo "CVMFS_REPOSITORIES was not set by environment nor in ${CONF}"; help; exit 1; }

# Process repository list for
SINGULARITY_BINDPATH=""
IFS=',' read -ra repo_list <<< "${CVMFS_REPOSITORIES}"
for repo in "${repo_list[@]}" ; do
    if [[ "${ETC_REPOS}" == *"${repo}"* ]]; then
        stat /cvmfs/${repo} &> /dev/null
    else
        MNT_POINT="${MOUNT_DIR}/${repo}"
        mkdir -p ${MNT_POINT}
        echo cvmfs2 -o config=${CONF} ${repo} ${MNT_POINT}
    fi
done

for repo in $(ls /cvmfs); do
    [[ -n "${SINGULARITY_BINDPATH}" ]] && SINGULARITY_BINDPATH="/cvmfs/${repo},${SINGULARITY_BINDPATH}" || SINGULARITY_BINDPATH="/cvmfs/${repo}"
done

for repo in $(ls ${MOUNT_DIR}); do
    [[ -n "${SINGULARITY_BINDPATH}" ]] && SINGULARITY_BINDPATH="${MOUNT_DIR}/${repo}:/cvmfs/${repo},${SINGULARITY_BINDPATH}" || SINGULARITY_BINDPATH="${MOUNT_DIR}/${repo}:/cvmfs/${repo}"
done
export SINGULARITY_BINDPATH

# Process additional singularity command line settings that can be setup by environment
declare -a SINGULARITY_EL7RUN_ARGS
[[ -n "${SINGULARITY_CVMFS2GO}" ]] && read -ra SINGULARITY_EL7RUN_ARGS <<< "${SINGULARITY_CVMFS2GO}"

# Specify the location of Singularity image
if [[ -z "${EL7RUN_IMG}" ]]; then
    EL7RUN_IMG="docker://adriansevcenco/el7hep"
fi

# it was stated that singularity cache is not suitable for concurent access
# then let's save the image and use it
if [[ ! -e "${EL7RUN_IMG}" ]]; then # unless is already a local image
    LOCAL_NAME="${IMAGE_DIR}/$(basename ${EL7RUN_IMG} | sed 's/:/_/g').sif"
    if [[ ! -e "${LOCAL_NAME}" ]]; then
        singularity pull --name ${LOCAL_NAME} ${EL7RUN_IMG} #  &> /dev/null
        export EL7RUN_IMG="${LOCAL_NAME}"
    fi
fi

exec singularity -s run "${SINGULARITY_EL7RUN_ARGS[@]}" ${EL7RUN_IMG} "${@}"

